name: "Push to deploy (Puppeteer)"

on:
  push:
    branches:
      - puppeteer

jobs:
  changelog:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.changelog.outputs.tag }}

    steps:
      - name: Checkouts repo
        uses: actions/checkout@v4

      - name: Conventional changelog action
        id: changelog
        uses: TriPSs/conventional-changelog-action@v5
        with:
          skip-on-empty: false
          github-token: ${{ secrets.GITHUB_TOKEN }}
          tag-prefix: ''
          version-file: './package.json'

      - name: Create release
        if: ${{ steps.changelog.outputs.skipped == 'false' }}
        uses: ncipollo/release-action@v1
        with:
          generateReleaseNotes: true
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ steps.changelog.outputs.tag }}-puppeteer
          name: v${{ steps.changelog.outputs.tag }} (Puppeteer)
          body: ${{ steps.changelog.outputs.clean_changelog }}

  build_docker_image:
    needs: changelog
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ghcr.io/wbrk-dev/vidstream-api:${{ needs.changelog.outputs.tag }}-puppeteer
            ghcr.io/wbrk-dev/vidstream-api:latest-puppeteer